(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
require('./lib/index.js')
},{"./lib/index.js":4}],2:[function(require,module,exports){
(function (global){
var angular = (typeof window !== "undefined" ? window['angular'] : typeof global !== "undefined" ? global['angular'] : null);

var dragged = angular.module('ui.dragged');

dragged.directive('uiDraggable', uiDraggable);

function uiDraggable() {
	return {
		scope: {
			uiDraggable: "=", 
			uiDragData: "@",
			uiDraggingClass: "@",
			uiDragFormat: "@"
		},
	    controllerAs: 'vm',
	    bindToController: true,
		controller: uiDraggableController
	}
}

function uiDraggableController($scope, $element) {
	var vm = this;
	var draggingClass = this.uiDraggingClass || 'dragging';


	$scope.$on('destroy', function() {
	});

	$scope.$watch('vm.uiDraggable', function(newVal) {

		var elementToDrag = $element;

		if(newVal === undefined || newVal) {
			elementToDrag.attr('draggable', true);
			elementToDrag.bind('dragstart', dragStartHandler);
			elementToDrag.bind('dragend', dragEndHandler);

		} else {
			elementToDrag.removeAttr('draggable');
			elementToDrag.unbind('dragstart');
			elementToDrag.unbind('dragend');
		}
	});


	function dragStartHandler(event) {
		event = event.originalEvent || event;
		var dataTransfer = event.dataTransfer;

		var elm = _createDragImage($element);
        dataTransfer.setDragImage(elm, 0, 0);

        var stringData = vm.uiDragData;
        if(vm.uiDragFormat) {
			dataTransfer.setData(vm.uiDragFormat, stringData);
        }
		dataTransfer.setData('text/plain', stringData);
        dataTransfer.effectAllowed = 'all';
        setTimeout(function() {
        	$element.addClass(draggingClass);
        },0);
	}

	function dragEndHandler(event) {
		$element.removeClass(draggingClass);
	}

	function _createDragImage(element) {
		if(element[0].tagName === 'TR')	{
			var elm = element.clone();
			var table = angular.element('<table></table>');
			table.append(elm);
			table.css({
				 "top": 0+"px",
                "left": 0+"px",
                "position": "absolute",
                "pointerEvents": "none"				
			});
			document.body.appendChild(table[0]);
			setTimeout(function() {
				table.remove();
			},0);
			return table[0];
		} else {
			return element[0];
		}
	}

}
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9kcmFnZ2FibGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbInZhciBhbmd1bGFyID0gKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3dbJ2FuZ3VsYXInXSA6IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxbJ2FuZ3VsYXInXSA6IG51bGwpO1xyXG5cclxudmFyIGRyYWdnZWQgPSBhbmd1bGFyLm1vZHVsZSgndWkuZHJhZ2dlZCcpO1xyXG5cclxuZHJhZ2dlZC5kaXJlY3RpdmUoJ3VpRHJhZ2dhYmxlJywgdWlEcmFnZ2FibGUpO1xyXG5cclxuZnVuY3Rpb24gdWlEcmFnZ2FibGUoKSB7XHJcblx0cmV0dXJuIHtcclxuXHRcdHNjb3BlOiB7XHJcblx0XHRcdHVpRHJhZ2dhYmxlOiBcIj1cIiwgXHJcblx0XHRcdHVpRHJhZ0RhdGE6IFwiQFwiLFxyXG5cdFx0XHR1aURyYWdnaW5nQ2xhc3M6IFwiQFwiLFxyXG5cdFx0XHR1aURyYWdGb3JtYXQ6IFwiQFwiXHJcblx0XHR9LFxyXG5cdCAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcblx0ICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWUsXHJcblx0XHRjb250cm9sbGVyOiB1aURyYWdnYWJsZUNvbnRyb2xsZXJcclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHVpRHJhZ2dhYmxlQ29udHJvbGxlcigkc2NvcGUsICRlbGVtZW50KSB7XHJcblx0dmFyIHZtID0gdGhpcztcclxuXHR2YXIgZHJhZ2dpbmdDbGFzcyA9IHRoaXMudWlEcmFnZ2luZ0NsYXNzIHx8ICdkcmFnZ2luZyc7XHJcblxyXG5cclxuXHQkc2NvcGUuJG9uKCdkZXN0cm95JywgZnVuY3Rpb24oKSB7XHJcblx0fSk7XHJcblxyXG5cdCRzY29wZS4kd2F0Y2goJ3ZtLnVpRHJhZ2dhYmxlJywgZnVuY3Rpb24obmV3VmFsKSB7XHJcblxyXG5cdFx0dmFyIGVsZW1lbnRUb0RyYWcgPSAkZWxlbWVudDtcclxuXHJcblx0XHRpZihuZXdWYWwgPT09IHVuZGVmaW5lZCB8fCBuZXdWYWwpIHtcclxuXHRcdFx0ZWxlbWVudFRvRHJhZy5hdHRyKCdkcmFnZ2FibGUnLCB0cnVlKTtcclxuXHRcdFx0ZWxlbWVudFRvRHJhZy5iaW5kKCdkcmFnc3RhcnQnLCBkcmFnU3RhcnRIYW5kbGVyKTtcclxuXHRcdFx0ZWxlbWVudFRvRHJhZy5iaW5kKCdkcmFnZW5kJywgZHJhZ0VuZEhhbmRsZXIpO1xyXG5cclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGVsZW1lbnRUb0RyYWcucmVtb3ZlQXR0cignZHJhZ2dhYmxlJyk7XHJcblx0XHRcdGVsZW1lbnRUb0RyYWcudW5iaW5kKCdkcmFnc3RhcnQnKTtcclxuXHRcdFx0ZWxlbWVudFRvRHJhZy51bmJpbmQoJ2RyYWdlbmQnKTtcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblxyXG5cdGZ1bmN0aW9uIGRyYWdTdGFydEhhbmRsZXIoZXZlbnQpIHtcclxuXHRcdGV2ZW50ID0gZXZlbnQub3JpZ2luYWxFdmVudCB8fCBldmVudDtcclxuXHRcdHZhciBkYXRhVHJhbnNmZXIgPSBldmVudC5kYXRhVHJhbnNmZXI7XHJcblxyXG5cdFx0dmFyIGVsbSA9IF9jcmVhdGVEcmFnSW1hZ2UoJGVsZW1lbnQpO1xyXG4gICAgICAgIGRhdGFUcmFuc2Zlci5zZXREcmFnSW1hZ2UoZWxtLCAwLCAwKTtcclxuXHJcbiAgICAgICAgdmFyIHN0cmluZ0RhdGEgPSB2bS51aURyYWdEYXRhO1xyXG4gICAgICAgIGlmKHZtLnVpRHJhZ0Zvcm1hdCkge1xyXG5cdFx0XHRkYXRhVHJhbnNmZXIuc2V0RGF0YSh2bS51aURyYWdGb3JtYXQsIHN0cmluZ0RhdGEpO1xyXG4gICAgICAgIH1cclxuXHRcdGRhdGFUcmFuc2Zlci5zZXREYXRhKCd0ZXh0L3BsYWluJywgc3RyaW5nRGF0YSk7XHJcbiAgICAgICAgZGF0YVRyYW5zZmVyLmVmZmVjdEFsbG93ZWQgPSAnYWxsJztcclxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIFx0JGVsZW1lbnQuYWRkQ2xhc3MoZHJhZ2dpbmdDbGFzcyk7XHJcbiAgICAgICAgfSwwKTtcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIGRyYWdFbmRIYW5kbGVyKGV2ZW50KSB7XHJcblx0XHQkZWxlbWVudC5yZW1vdmVDbGFzcyhkcmFnZ2luZ0NsYXNzKTtcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIF9jcmVhdGVEcmFnSW1hZ2UoZWxlbWVudCkge1xyXG5cdFx0aWYoZWxlbWVudFswXS50YWdOYW1lID09PSAnVFInKVx0e1xyXG5cdFx0XHR2YXIgZWxtID0gZWxlbWVudC5jbG9uZSgpO1xyXG5cdFx0XHR2YXIgdGFibGUgPSBhbmd1bGFyLmVsZW1lbnQoJzx0YWJsZT48L3RhYmxlPicpO1xyXG5cdFx0XHR0YWJsZS5hcHBlbmQoZWxtKTtcclxuXHRcdFx0dGFibGUuY3NzKHtcclxuXHRcdFx0XHQgXCJ0b3BcIjogMCtcInB4XCIsXHJcbiAgICAgICAgICAgICAgICBcImxlZnRcIjogMCtcInB4XCIsXHJcbiAgICAgICAgICAgICAgICBcInBvc2l0aW9uXCI6IFwiYWJzb2x1dGVcIixcclxuICAgICAgICAgICAgICAgIFwicG9pbnRlckV2ZW50c1wiOiBcIm5vbmVcIlx0XHRcdFx0XHJcblx0XHRcdH0pO1xyXG5cdFx0XHRkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRhYmxlWzBdKTtcclxuXHRcdFx0c2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuXHRcdFx0XHR0YWJsZS5yZW1vdmUoKTtcclxuXHRcdFx0fSwwKTtcclxuXHRcdFx0cmV0dXJuIHRhYmxlWzBdO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0cmV0dXJuIGVsZW1lbnRbMF07XHJcblx0XHR9XHJcblx0fVxyXG5cclxufSJdfQ==
},{}],3:[function(require,module,exports){
(function (global){
var angular = (typeof window !== "undefined" ? window['angular'] : typeof global !== "undefined" ? global['angular'] : null);

var dragged = angular.module('ui.dragged');

dragged.directive('uiDroppable', uiDroppable);

function uiDroppable() {
	return {
		scope: {
			uiDroppable: "=", 
			onDrop: "&",
			uiDropActiveClass:"@",
			uiDropAccepts:"@"

		},
	    controllerAs: 'vm',
	    bindToController: true,
		controller: uiDroppableController
	}
}

function uiDroppableController($scope, $element) {
	var vm = this;
	var dropActiveClass = this.uiDropActiveClass || 'dropActive';
	var accepts = this.uiDropAccepts || 'text/plain';


	$scope.$watch('vm.uiDraggable', function(newVal) {

		var elementToDrop = $element;

		if(newVal === undefined || newVal) {
			elementToDrop.bind('dragover', dragOverHandler);
			elementToDrop.bind('dragenter', dragEnterHandler);
			elementToDrop.bind('dragleave', dragLeaveHandler);
			elementToDrop.bind('drop', dropHandler);

		} else {
			elementToDrop.unbind('dragover');
			elementToDrop.unbind('drop');
			elementToDrop.unbind('dragenter');
			elementToDrop.unbind('dragleave');
		}
	});


	function dragOverHandler(event) {
		event = event.originalEvent || event;

		if(_isAccepted(event.dataTransfer.types)) {
			if (event.preventDefault) {
		        event.preventDefault(); 
		    }

		    if (event.stopPropagation) {
		        event.stopPropagation();
		    }
		}
	}

	function dropHandler(event) {
		event = event.originalEvent || event;

		var dataTransfer = event.dataTransfer;
		var types = dataTransfer.types;
		var allData = {};
		for(var i=0;i<types.length; i++) {
			allData[types[i]] = dataTransfer.getData(types[i]);
		}
		vm.onDrop({data:allData[accepts], allData:allData, event:event});
		dragLeaveHandler(event);

		if(event.stopPropagation) {
			event.stopPropagation();
		}
		if (event.preventDefault) {
	        event.preventDefault(); 
	    }
	}

	function dragEnterHandler(event) {
		event = event.originalEvent || event;
		if(_isAccepted(event.dataTransfer.types)) {
			$element.addClass(dropActiveClass)
		}
	}

	function dragLeaveHandler(event) {
		$element.removeClass(dropActiveClass)
	}

	function _isAccepted(types) {
		for( var i=0;i< types.length; i++) {
			if(types[i] === accepts ) {
				return true;
			}
		}
		return false;
	}

}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
//# sourceMappingURL=data:application/json;charset:utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9kcm9wcGFibGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGFuZ3VsYXIgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snYW5ndWxhciddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnYW5ndWxhciddIDogbnVsbCk7XHJcblxyXG52YXIgZHJhZ2dlZCA9IGFuZ3VsYXIubW9kdWxlKCd1aS5kcmFnZ2VkJyk7XHJcblxyXG5kcmFnZ2VkLmRpcmVjdGl2ZSgndWlEcm9wcGFibGUnLCB1aURyb3BwYWJsZSk7XHJcblxyXG5mdW5jdGlvbiB1aURyb3BwYWJsZSgpIHtcclxuXHRyZXR1cm4ge1xyXG5cdFx0c2NvcGU6IHtcclxuXHRcdFx0dWlEcm9wcGFibGU6IFwiPVwiLCBcclxuXHRcdFx0b25Ecm9wOiBcIiZcIixcclxuXHRcdFx0dWlEcm9wQWN0aXZlQ2xhc3M6XCJAXCIsXHJcblx0XHRcdHVpRHJvcEFjY2VwdHM6XCJAXCJcclxuXHJcblx0XHR9LFxyXG5cdCAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcblx0ICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWUsXHJcblx0XHRjb250cm9sbGVyOiB1aURyb3BwYWJsZUNvbnRyb2xsZXJcclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHVpRHJvcHBhYmxlQ29udHJvbGxlcigkc2NvcGUsICRlbGVtZW50KSB7XHJcblx0dmFyIHZtID0gdGhpcztcclxuXHR2YXIgZHJvcEFjdGl2ZUNsYXNzID0gdGhpcy51aURyb3BBY3RpdmVDbGFzcyB8fCAnZHJvcEFjdGl2ZSc7XHJcblx0dmFyIGFjY2VwdHMgPSB0aGlzLnVpRHJvcEFjY2VwdHMgfHwgJ3RleHQvcGxhaW4nO1xyXG5cclxuXHJcblx0JHNjb3BlLiR3YXRjaCgndm0udWlEcmFnZ2FibGUnLCBmdW5jdGlvbihuZXdWYWwpIHtcclxuXHJcblx0XHR2YXIgZWxlbWVudFRvRHJvcCA9ICRlbGVtZW50O1xyXG5cclxuXHRcdGlmKG5ld1ZhbCA9PT0gdW5kZWZpbmVkIHx8IG5ld1ZhbCkge1xyXG5cdFx0XHRlbGVtZW50VG9Ecm9wLmJpbmQoJ2RyYWdvdmVyJywgZHJhZ092ZXJIYW5kbGVyKTtcclxuXHRcdFx0ZWxlbWVudFRvRHJvcC5iaW5kKCdkcmFnZW50ZXInLCBkcmFnRW50ZXJIYW5kbGVyKTtcclxuXHRcdFx0ZWxlbWVudFRvRHJvcC5iaW5kKCdkcmFnbGVhdmUnLCBkcmFnTGVhdmVIYW5kbGVyKTtcclxuXHRcdFx0ZWxlbWVudFRvRHJvcC5iaW5kKCdkcm9wJywgZHJvcEhhbmRsZXIpO1xyXG5cclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGVsZW1lbnRUb0Ryb3AudW5iaW5kKCdkcmFnb3ZlcicpO1xyXG5cdFx0XHRlbGVtZW50VG9Ecm9wLnVuYmluZCgnZHJvcCcpO1xyXG5cdFx0XHRlbGVtZW50VG9Ecm9wLnVuYmluZCgnZHJhZ2VudGVyJyk7XHJcblx0XHRcdGVsZW1lbnRUb0Ryb3AudW5iaW5kKCdkcmFnbGVhdmUnKTtcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblxyXG5cdGZ1bmN0aW9uIGRyYWdPdmVySGFuZGxlcihldmVudCkge1xyXG5cdFx0ZXZlbnQgPSBldmVudC5vcmlnaW5hbEV2ZW50IHx8IGV2ZW50O1xyXG5cclxuXHRcdGlmKF9pc0FjY2VwdGVkKGV2ZW50LmRhdGFUcmFuc2Zlci50eXBlcykpIHtcclxuXHRcdFx0aWYgKGV2ZW50LnByZXZlbnREZWZhdWx0KSB7XHJcblx0XHQgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7IFxyXG5cdFx0ICAgIH1cclxuXHJcblx0XHQgICAgaWYgKGV2ZW50LnN0b3BQcm9wYWdhdGlvbikge1xyXG5cdFx0ICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHRcdCAgICB9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBkcm9wSGFuZGxlcihldmVudCkge1xyXG5cdFx0ZXZlbnQgPSBldmVudC5vcmlnaW5hbEV2ZW50IHx8IGV2ZW50O1xyXG5cclxuXHRcdHZhciBkYXRhVHJhbnNmZXIgPSBldmVudC5kYXRhVHJhbnNmZXI7XHJcblx0XHR2YXIgdHlwZXMgPSBkYXRhVHJhbnNmZXIudHlwZXM7XHJcblx0XHR2YXIgYWxsRGF0YSA9IHt9O1xyXG5cdFx0Zm9yKHZhciBpPTA7aTx0eXBlcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHRhbGxEYXRhW3R5cGVzW2ldXSA9IGRhdGFUcmFuc2Zlci5nZXREYXRhKHR5cGVzW2ldKTtcclxuXHRcdH1cclxuXHRcdHZtLm9uRHJvcCh7ZGF0YTphbGxEYXRhW2FjY2VwdHNdLCBhbGxEYXRhOmFsbERhdGEsIGV2ZW50OmV2ZW50fSk7XHJcblx0XHRkcmFnTGVhdmVIYW5kbGVyKGV2ZW50KTtcclxuXHJcblx0XHRpZihldmVudC5zdG9wUHJvcGFnYXRpb24pIHtcclxuXHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblx0XHR9XHJcblx0XHRpZiAoZXZlbnQucHJldmVudERlZmF1bHQpIHtcclxuXHQgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7IFxyXG5cdCAgICB9XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBkcmFnRW50ZXJIYW5kbGVyKGV2ZW50KSB7XHJcblx0XHRldmVudCA9IGV2ZW50Lm9yaWdpbmFsRXZlbnQgfHwgZXZlbnQ7XHJcblx0XHRpZihfaXNBY2NlcHRlZChldmVudC5kYXRhVHJhbnNmZXIudHlwZXMpKSB7XHJcblx0XHRcdCRlbGVtZW50LmFkZENsYXNzKGRyb3BBY3RpdmVDbGFzcylcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIGRyYWdMZWF2ZUhhbmRsZXIoZXZlbnQpIHtcclxuXHRcdCRlbGVtZW50LnJlbW92ZUNsYXNzKGRyb3BBY3RpdmVDbGFzcylcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIF9pc0FjY2VwdGVkKHR5cGVzKSB7XHJcblx0XHRmb3IoIHZhciBpPTA7aTwgdHlwZXMubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0aWYodHlwZXNbaV0gPT09IGFjY2VwdHMgKSB7XHJcblx0XHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdHJldHVybiBmYWxzZTtcclxuXHR9XHJcblxyXG59XHJcbiJdfQ==
},{}],4:[function(require,module,exports){
var dragged = angular.module('ui.dragged', []);

require('./draggable');
require('./droppable');
},{"./draggable":2,"./droppable":3}],5:[function(require,module,exports){
require('..');
},{"..":1}]},{},[5])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJpbmRleC5qcyIsImxpYi9kcmFnZ2FibGUuanMiLCJsaWIvZHJvcHBhYmxlLmpzIiwibGliL2luZGV4LmpzIiwidGVzdC9hcHAuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzNGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDeEdBO0FBQ0E7QUFDQTtBQUNBOztBQ0hBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsInJlcXVpcmUoJy4vbGliL2luZGV4LmpzJykiLCIoZnVuY3Rpb24gKGdsb2JhbCl7XG52YXIgYW5ndWxhciA9ICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93Wydhbmd1bGFyJ10gOiB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsWydhbmd1bGFyJ10gOiBudWxsKTtcclxuXHJcbnZhciBkcmFnZ2VkID0gYW5ndWxhci5tb2R1bGUoJ3VpLmRyYWdnZWQnKTtcclxuXHJcbmRyYWdnZWQuZGlyZWN0aXZlKCd1aURyYWdnYWJsZScsIHVpRHJhZ2dhYmxlKTtcclxuXHJcbmZ1bmN0aW9uIHVpRHJhZ2dhYmxlKCkge1xyXG5cdHJldHVybiB7XHJcblx0XHRzY29wZToge1xyXG5cdFx0XHR1aURyYWdnYWJsZTogXCI9XCIsIFxyXG5cdFx0XHR1aURyYWdEYXRhOiBcIkBcIixcclxuXHRcdFx0dWlEcmFnZ2luZ0NsYXNzOiBcIkBcIixcclxuXHRcdFx0dWlEcmFnRm9ybWF0OiBcIkBcIlxyXG5cdFx0fSxcclxuXHQgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG5cdCAgICBiaW5kVG9Db250cm9sbGVyOiB0cnVlLFxyXG5cdFx0Y29udHJvbGxlcjogdWlEcmFnZ2FibGVDb250cm9sbGVyXHJcblx0fVxyXG59XHJcblxyXG5mdW5jdGlvbiB1aURyYWdnYWJsZUNvbnRyb2xsZXIoJHNjb3BlLCAkZWxlbWVudCkge1xyXG5cdHZhciB2bSA9IHRoaXM7XHJcblx0dmFyIGRyYWdnaW5nQ2xhc3MgPSB0aGlzLnVpRHJhZ2dpbmdDbGFzcyB8fCAnZHJhZ2dpbmcnO1xyXG5cclxuXHJcblx0JHNjb3BlLiRvbignZGVzdHJveScsIGZ1bmN0aW9uKCkge1xyXG5cdH0pO1xyXG5cclxuXHQkc2NvcGUuJHdhdGNoKCd2bS51aURyYWdnYWJsZScsIGZ1bmN0aW9uKG5ld1ZhbCkge1xyXG5cclxuXHRcdHZhciBlbGVtZW50VG9EcmFnID0gJGVsZW1lbnQ7XHJcblxyXG5cdFx0aWYobmV3VmFsID09PSB1bmRlZmluZWQgfHwgbmV3VmFsKSB7XHJcblx0XHRcdGVsZW1lbnRUb0RyYWcuYXR0cignZHJhZ2dhYmxlJywgdHJ1ZSk7XHJcblx0XHRcdGVsZW1lbnRUb0RyYWcuYmluZCgnZHJhZ3N0YXJ0JywgZHJhZ1N0YXJ0SGFuZGxlcik7XHJcblx0XHRcdGVsZW1lbnRUb0RyYWcuYmluZCgnZHJhZ2VuZCcsIGRyYWdFbmRIYW5kbGVyKTtcclxuXHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRlbGVtZW50VG9EcmFnLnJlbW92ZUF0dHIoJ2RyYWdnYWJsZScpO1xyXG5cdFx0XHRlbGVtZW50VG9EcmFnLnVuYmluZCgnZHJhZ3N0YXJ0Jyk7XHJcblx0XHRcdGVsZW1lbnRUb0RyYWcudW5iaW5kKCdkcmFnZW5kJyk7XHJcblx0XHR9XHJcblx0fSk7XHJcblxyXG5cclxuXHRmdW5jdGlvbiBkcmFnU3RhcnRIYW5kbGVyKGV2ZW50KSB7XHJcblx0XHRldmVudCA9IGV2ZW50Lm9yaWdpbmFsRXZlbnQgfHwgZXZlbnQ7XHJcblx0XHR2YXIgZGF0YVRyYW5zZmVyID0gZXZlbnQuZGF0YVRyYW5zZmVyO1xyXG5cclxuXHRcdHZhciBlbG0gPSBfY3JlYXRlRHJhZ0ltYWdlKCRlbGVtZW50KTtcclxuICAgICAgICBkYXRhVHJhbnNmZXIuc2V0RHJhZ0ltYWdlKGVsbSwgMCwgMCk7XHJcblxyXG4gICAgICAgIHZhciBzdHJpbmdEYXRhID0gdm0udWlEcmFnRGF0YTtcclxuICAgICAgICBpZih2bS51aURyYWdGb3JtYXQpIHtcclxuXHRcdFx0ZGF0YVRyYW5zZmVyLnNldERhdGEodm0udWlEcmFnRm9ybWF0LCBzdHJpbmdEYXRhKTtcclxuICAgICAgICB9XHJcblx0XHRkYXRhVHJhbnNmZXIuc2V0RGF0YSgndGV4dC9wbGFpbicsIHN0cmluZ0RhdGEpO1xyXG4gICAgICAgIGRhdGFUcmFuc2Zlci5lZmZlY3RBbGxvd2VkID0gJ2FsbCc7XHJcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICBcdCRlbGVtZW50LmFkZENsYXNzKGRyYWdnaW5nQ2xhc3MpO1xyXG4gICAgICAgIH0sMCk7XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBkcmFnRW5kSGFuZGxlcihldmVudCkge1xyXG5cdFx0JGVsZW1lbnQucmVtb3ZlQ2xhc3MoZHJhZ2dpbmdDbGFzcyk7XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBfY3JlYXRlRHJhZ0ltYWdlKGVsZW1lbnQpIHtcclxuXHRcdGlmKGVsZW1lbnRbMF0udGFnTmFtZSA9PT0gJ1RSJylcdHtcclxuXHRcdFx0dmFyIGVsbSA9IGVsZW1lbnQuY2xvbmUoKTtcclxuXHRcdFx0dmFyIHRhYmxlID0gYW5ndWxhci5lbGVtZW50KCc8dGFibGU+PC90YWJsZT4nKTtcclxuXHRcdFx0dGFibGUuYXBwZW5kKGVsbSk7XHJcblx0XHRcdHRhYmxlLmNzcyh7XHJcblx0XHRcdFx0IFwidG9wXCI6IDArXCJweFwiLFxyXG4gICAgICAgICAgICAgICAgXCJsZWZ0XCI6IDArXCJweFwiLFxyXG4gICAgICAgICAgICAgICAgXCJwb3NpdGlvblwiOiBcImFic29sdXRlXCIsXHJcbiAgICAgICAgICAgICAgICBcInBvaW50ZXJFdmVudHNcIjogXCJub25lXCJcdFx0XHRcdFxyXG5cdFx0XHR9KTtcclxuXHRcdFx0ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0YWJsZVswXSk7XHJcblx0XHRcdHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0dGFibGUucmVtb3ZlKCk7XHJcblx0XHRcdH0sMCk7XHJcblx0XHRcdHJldHVybiB0YWJsZVswXTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdHJldHVybiBlbGVtZW50WzBdO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcbn1cbn0pLmNhbGwodGhpcyx0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIgPyBzZWxmIDogdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHt9KVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ6dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW14cFlpOWtjbUZuWjJGaWJHVXVhbk1pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJanRCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFaUxDSm1hV3hsSWpvaVoyVnVaWEpoZEdWa0xtcHpJaXdpYzI5MWNtTmxVbTl2ZENJNklpSXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJblpoY2lCaGJtZDFiR0Z5SUQwZ0tIUjVjR1Z2WmlCM2FXNWtiM2NnSVQwOUlGd2lkVzVrWldacGJtVmtYQ0lnUHlCM2FXNWtiM2RiSjJGdVozVnNZWEluWFNBNklIUjVjR1Z2WmlCbmJHOWlZV3dnSVQwOUlGd2lkVzVrWldacGJtVmtYQ0lnUHlCbmJHOWlZV3hiSjJGdVozVnNZWEluWFNBNklHNTFiR3dwTzF4eVhHNWNjbHh1ZG1GeUlHUnlZV2RuWldRZ1BTQmhibWQxYkdGeUxtMXZaSFZzWlNnbmRXa3VaSEpoWjJkbFpDY3BPMXh5WEc1Y2NseHVaSEpoWjJkbFpDNWthWEpsWTNScGRtVW9KM1ZwUkhKaFoyZGhZbXhsSnl3Z2RXbEVjbUZuWjJGaWJHVXBPMXh5WEc1Y2NseHVablZ1WTNScGIyNGdkV2xFY21GbloyRmliR1VvS1NCN1hISmNibHgwY21WMGRYSnVJSHRjY2x4dVhIUmNkSE5qYjNCbE9pQjdYSEpjYmx4MFhIUmNkSFZwUkhKaFoyZGhZbXhsT2lCY0lqMWNJaXdnWEhKY2JseDBYSFJjZEhWcFJISmhaMFJoZEdFNklGd2lRRndpTEZ4eVhHNWNkRngwWEhSMWFVUnlZV2RuYVc1blEyeGhjM002SUZ3aVFGd2lMRnh5WEc1Y2RGeDBYSFIxYVVSeVlXZEdiM0p0WVhRNklGd2lRRndpWEhKY2JseDBYSFI5TEZ4eVhHNWNkQ0FnSUNCamIyNTBjbTlzYkdWeVFYTTZJQ2QyYlNjc1hISmNibHgwSUNBZ0lHSnBibVJVYjBOdmJuUnliMnhzWlhJNklIUnlkV1VzWEhKY2JseDBYSFJqYjI1MGNtOXNiR1Z5T2lCMWFVUnlZV2RuWVdKc1pVTnZiblJ5YjJ4c1pYSmNjbHh1WEhSOVhISmNibjFjY2x4dVhISmNibVoxYm1OMGFXOXVJSFZwUkhKaFoyZGhZbXhsUTI5dWRISnZiR3hsY2lna2MyTnZjR1VzSUNSbGJHVnRaVzUwS1NCN1hISmNibHgwZG1GeUlIWnRJRDBnZEdocGN6dGNjbHh1WEhSMllYSWdaSEpoWjJkcGJtZERiR0Z6Y3lBOUlIUm9hWE11ZFdsRWNtRm5aMmx1WjBOc1lYTnpJSHg4SUNka2NtRm5aMmx1WnljN1hISmNibHh5WEc1Y2NseHVYSFFrYzJOdmNHVXVKRzl1S0Nka1pYTjBjbTk1Snl3Z1puVnVZM1JwYjI0b0tTQjdYSEpjYmx4MGZTazdYSEpjYmx4eVhHNWNkQ1J6WTI5d1pTNGtkMkYwWTJnb0ozWnRMblZwUkhKaFoyZGhZbXhsSnl3Z1puVnVZM1JwYjI0b2JtVjNWbUZzS1NCN1hISmNibHh5WEc1Y2RGeDBkbUZ5SUdWc1pXMWxiblJVYjBSeVlXY2dQU0FrWld4bGJXVnVkRHRjY2x4dVhISmNibHgwWEhScFppaHVaWGRXWVd3Z1BUMDlJSFZ1WkdWbWFXNWxaQ0I4ZkNCdVpYZFdZV3dwSUh0Y2NseHVYSFJjZEZ4MFpXeGxiV1Z1ZEZSdlJISmhaeTVoZEhSeUtDZGtjbUZuWjJGaWJHVW5MQ0IwY25WbEtUdGNjbHh1WEhSY2RGeDBaV3hsYldWdWRGUnZSSEpoWnk1aWFXNWtLQ2RrY21GbmMzUmhjblFuTENCa2NtRm5VM1JoY25SSVlXNWtiR1Z5S1R0Y2NseHVYSFJjZEZ4MFpXeGxiV1Z1ZEZSdlJISmhaeTVpYVc1a0tDZGtjbUZuWlc1a0p5d2daSEpoWjBWdVpFaGhibVJzWlhJcE8xeHlYRzVjY2x4dVhIUmNkSDBnWld4elpTQjdYSEpjYmx4MFhIUmNkR1ZzWlcxbGJuUlViMFJ5WVdjdWNtVnRiM1psUVhSMGNpZ25aSEpoWjJkaFlteGxKeWs3WEhKY2JseDBYSFJjZEdWc1pXMWxiblJVYjBSeVlXY3VkVzVpYVc1a0tDZGtjbUZuYzNSaGNuUW5LVHRjY2x4dVhIUmNkRngwWld4bGJXVnVkRlJ2UkhKaFp5NTFibUpwYm1Rb0oyUnlZV2RsYm1RbktUdGNjbHh1WEhSY2RIMWNjbHh1WEhSOUtUdGNjbHh1WEhKY2JseHlYRzVjZEdaMWJtTjBhVzl1SUdSeVlXZFRkR0Z5ZEVoaGJtUnNaWElvWlhabGJuUXBJSHRjY2x4dVhIUmNkR1YyWlc1MElEMGdaWFpsYm5RdWIzSnBaMmx1WVd4RmRtVnVkQ0I4ZkNCbGRtVnVkRHRjY2x4dVhIUmNkSFpoY2lCa1lYUmhWSEpoYm5ObVpYSWdQU0JsZG1WdWRDNWtZWFJoVkhKaGJuTm1aWEk3WEhKY2JseHlYRzVjZEZ4MGRtRnlJR1ZzYlNBOUlGOWpjbVZoZEdWRWNtRm5TVzFoWjJVb0pHVnNaVzFsYm5RcE8xeHlYRzRnSUNBZ0lDQWdJR1JoZEdGVWNtRnVjMlpsY2k1elpYUkVjbUZuU1cxaFoyVW9aV3h0TENBd0xDQXdLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdkbUZ5SUhOMGNtbHVaMFJoZEdFZ1BTQjJiUzUxYVVSeVlXZEVZWFJoTzF4eVhHNGdJQ0FnSUNBZ0lHbG1LSFp0TG5WcFJISmhaMFp2Y20xaGRDa2dlMXh5WEc1Y2RGeDBYSFJrWVhSaFZISmhibk5tWlhJdWMyVjBSR0YwWVNoMmJTNTFhVVJ5WVdkR2IzSnRZWFFzSUhOMGNtbHVaMFJoZEdFcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dVhIUmNkR1JoZEdGVWNtRnVjMlpsY2k1elpYUkVZWFJoS0NkMFpYaDBMM0JzWVdsdUp5d2djM1J5YVc1blJHRjBZU2s3WEhKY2JpQWdJQ0FnSUNBZ1pHRjBZVlJ5WVc1elptVnlMbVZtWm1WamRFRnNiRzkzWldRZ1BTQW5ZV3hzSnp0Y2NseHVJQ0FnSUNBZ0lDQnpaWFJVYVcxbGIzVjBLR1oxYm1OMGFXOXVLQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lGeDBKR1ZzWlcxbGJuUXVZV1JrUTJ4aGMzTW9aSEpoWjJkcGJtZERiR0Z6Y3lrN1hISmNiaUFnSUNBZ0lDQWdmU3d3S1R0Y2NseHVYSFI5WEhKY2JseHlYRzVjZEdaMWJtTjBhVzl1SUdSeVlXZEZibVJJWVc1a2JHVnlLR1YyWlc1MEtTQjdYSEpjYmx4MFhIUWtaV3hsYldWdWRDNXlaVzF2ZG1WRGJHRnpjeWhrY21GbloybHVaME5zWVhOektUdGNjbHh1WEhSOVhISmNibHh5WEc1Y2RHWjFibU4wYVc5dUlGOWpjbVZoZEdWRWNtRm5TVzFoWjJVb1pXeGxiV1Z1ZENrZ2UxeHlYRzVjZEZ4MGFXWW9aV3hsYldWdWRGc3dYUzUwWVdkT1lXMWxJRDA5UFNBblZGSW5LVngwZTF4eVhHNWNkRngwWEhSMllYSWdaV3h0SUQwZ1pXeGxiV1Z1ZEM1amJHOXVaU2dwTzF4eVhHNWNkRngwWEhSMllYSWdkR0ZpYkdVZ1BTQmhibWQxYkdGeUxtVnNaVzFsYm5Rb0p6eDBZV0pzWlQ0OEwzUmhZbXhsUGljcE8xeHlYRzVjZEZ4MFhIUjBZV0pzWlM1aGNIQmxibVFvWld4dEtUdGNjbHh1WEhSY2RGeDBkR0ZpYkdVdVkzTnpLSHRjY2x4dVhIUmNkRngwWEhRZ1hDSjBiM0JjSWpvZ01DdGNJbkI0WENJc1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJbXhsWm5SY0lqb2dNQ3RjSW5CNFhDSXNYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JjSW5CdmMybDBhVzl1WENJNklGd2lZV0p6YjJ4MWRHVmNJaXhjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aWNHOXBiblJsY2tWMlpXNTBjMXdpT2lCY0ltNXZibVZjSWx4MFhIUmNkRngwWEhKY2JseDBYSFJjZEgwcE8xeHlYRzVjZEZ4MFhIUmtiMk4xYldWdWRDNWliMlI1TG1Gd2NHVnVaRU5vYVd4a0tIUmhZbXhsV3pCZEtUdGNjbHh1WEhSY2RGeDBjMlYwVkdsdFpXOTFkQ2htZFc1amRHbHZiaWdwSUh0Y2NseHVYSFJjZEZ4MFhIUjBZV0pzWlM1eVpXMXZkbVVvS1R0Y2NseHVYSFJjZEZ4MGZTd3dLVHRjY2x4dVhIUmNkRngwY21WMGRYSnVJSFJoWW14bFd6QmRPMXh5WEc1Y2RGeDBmU0JsYkhObElIdGNjbHh1WEhSY2RGeDBjbVYwZFhKdUlHVnNaVzFsYm5SYk1GMDdYSEpjYmx4MFhIUjlYSEpjYmx4MGZWeHlYRzVjY2x4dWZTSmRmUT09IiwiKGZ1bmN0aW9uIChnbG9iYWwpe1xudmFyIGFuZ3VsYXIgPSAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvd1snYW5ndWxhciddIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbFsnYW5ndWxhciddIDogbnVsbCk7XHJcblxyXG52YXIgZHJhZ2dlZCA9IGFuZ3VsYXIubW9kdWxlKCd1aS5kcmFnZ2VkJyk7XHJcblxyXG5kcmFnZ2VkLmRpcmVjdGl2ZSgndWlEcm9wcGFibGUnLCB1aURyb3BwYWJsZSk7XHJcblxyXG5mdW5jdGlvbiB1aURyb3BwYWJsZSgpIHtcclxuXHRyZXR1cm4ge1xyXG5cdFx0c2NvcGU6IHtcclxuXHRcdFx0dWlEcm9wcGFibGU6IFwiPVwiLCBcclxuXHRcdFx0b25Ecm9wOiBcIiZcIixcclxuXHRcdFx0dWlEcm9wQWN0aXZlQ2xhc3M6XCJAXCIsXHJcblx0XHRcdHVpRHJvcEFjY2VwdHM6XCJAXCJcclxuXHJcblx0XHR9LFxyXG5cdCAgICBjb250cm9sbGVyQXM6ICd2bScsXHJcblx0ICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWUsXHJcblx0XHRjb250cm9sbGVyOiB1aURyb3BwYWJsZUNvbnRyb2xsZXJcclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHVpRHJvcHBhYmxlQ29udHJvbGxlcigkc2NvcGUsICRlbGVtZW50KSB7XHJcblx0dmFyIHZtID0gdGhpcztcclxuXHR2YXIgZHJvcEFjdGl2ZUNsYXNzID0gdGhpcy51aURyb3BBY3RpdmVDbGFzcyB8fCAnZHJvcEFjdGl2ZSc7XHJcblx0dmFyIGFjY2VwdHMgPSB0aGlzLnVpRHJvcEFjY2VwdHMgfHwgJ3RleHQvcGxhaW4nO1xyXG5cclxuXHJcblx0JHNjb3BlLiR3YXRjaCgndm0udWlEcmFnZ2FibGUnLCBmdW5jdGlvbihuZXdWYWwpIHtcclxuXHJcblx0XHR2YXIgZWxlbWVudFRvRHJvcCA9ICRlbGVtZW50O1xyXG5cclxuXHRcdGlmKG5ld1ZhbCA9PT0gdW5kZWZpbmVkIHx8IG5ld1ZhbCkge1xyXG5cdFx0XHRlbGVtZW50VG9Ecm9wLmJpbmQoJ2RyYWdvdmVyJywgZHJhZ092ZXJIYW5kbGVyKTtcclxuXHRcdFx0ZWxlbWVudFRvRHJvcC5iaW5kKCdkcmFnZW50ZXInLCBkcmFnRW50ZXJIYW5kbGVyKTtcclxuXHRcdFx0ZWxlbWVudFRvRHJvcC5iaW5kKCdkcmFnbGVhdmUnLCBkcmFnTGVhdmVIYW5kbGVyKTtcclxuXHRcdFx0ZWxlbWVudFRvRHJvcC5iaW5kKCdkcm9wJywgZHJvcEhhbmRsZXIpO1xyXG5cclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGVsZW1lbnRUb0Ryb3AudW5iaW5kKCdkcmFnb3ZlcicpO1xyXG5cdFx0XHRlbGVtZW50VG9Ecm9wLnVuYmluZCgnZHJvcCcpO1xyXG5cdFx0XHRlbGVtZW50VG9Ecm9wLnVuYmluZCgnZHJhZ2VudGVyJyk7XHJcblx0XHRcdGVsZW1lbnRUb0Ryb3AudW5iaW5kKCdkcmFnbGVhdmUnKTtcclxuXHRcdH1cclxuXHR9KTtcclxuXHJcblxyXG5cdGZ1bmN0aW9uIGRyYWdPdmVySGFuZGxlcihldmVudCkge1xyXG5cdFx0ZXZlbnQgPSBldmVudC5vcmlnaW5hbEV2ZW50IHx8IGV2ZW50O1xyXG5cclxuXHRcdGlmKF9pc0FjY2VwdGVkKGV2ZW50LmRhdGFUcmFuc2Zlci50eXBlcykpIHtcclxuXHRcdFx0aWYgKGV2ZW50LnByZXZlbnREZWZhdWx0KSB7XHJcblx0XHQgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7IFxyXG5cdFx0ICAgIH1cclxuXHJcblx0XHQgICAgaWYgKGV2ZW50LnN0b3BQcm9wYWdhdGlvbikge1xyXG5cdFx0ICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHRcdCAgICB9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBkcm9wSGFuZGxlcihldmVudCkge1xyXG5cdFx0ZXZlbnQgPSBldmVudC5vcmlnaW5hbEV2ZW50IHx8IGV2ZW50O1xyXG5cclxuXHRcdHZhciBkYXRhVHJhbnNmZXIgPSBldmVudC5kYXRhVHJhbnNmZXI7XHJcblx0XHR2YXIgdHlwZXMgPSBkYXRhVHJhbnNmZXIudHlwZXM7XHJcblx0XHR2YXIgYWxsRGF0YSA9IHt9O1xyXG5cdFx0Zm9yKHZhciBpPTA7aTx0eXBlcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHRhbGxEYXRhW3R5cGVzW2ldXSA9IGRhdGFUcmFuc2Zlci5nZXREYXRhKHR5cGVzW2ldKTtcclxuXHRcdH1cclxuXHRcdHZtLm9uRHJvcCh7ZGF0YTphbGxEYXRhW2FjY2VwdHNdLCBhbGxEYXRhOmFsbERhdGEsIGV2ZW50OmV2ZW50fSk7XHJcblx0XHRkcmFnTGVhdmVIYW5kbGVyKGV2ZW50KTtcclxuXHJcblx0XHRpZihldmVudC5zdG9wUHJvcGFnYXRpb24pIHtcclxuXHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblx0XHR9XHJcblx0XHRpZiAoZXZlbnQucHJldmVudERlZmF1bHQpIHtcclxuXHQgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7IFxyXG5cdCAgICB9XHJcblx0fVxyXG5cclxuXHRmdW5jdGlvbiBkcmFnRW50ZXJIYW5kbGVyKGV2ZW50KSB7XHJcblx0XHRldmVudCA9IGV2ZW50Lm9yaWdpbmFsRXZlbnQgfHwgZXZlbnQ7XHJcblx0XHRpZihfaXNBY2NlcHRlZChldmVudC5kYXRhVHJhbnNmZXIudHlwZXMpKSB7XHJcblx0XHRcdCRlbGVtZW50LmFkZENsYXNzKGRyb3BBY3RpdmVDbGFzcylcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIGRyYWdMZWF2ZUhhbmRsZXIoZXZlbnQpIHtcclxuXHRcdCRlbGVtZW50LnJlbW92ZUNsYXNzKGRyb3BBY3RpdmVDbGFzcylcclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIF9pc0FjY2VwdGVkKHR5cGVzKSB7XHJcblx0XHRmb3IoIHZhciBpPTA7aTwgdHlwZXMubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0aWYodHlwZXNbaV0gPT09IGFjY2VwdHMgKSB7XHJcblx0XHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdHJldHVybiBmYWxzZTtcclxuXHR9XHJcblxyXG59XHJcblxufSkuY2FsbCh0aGlzLHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDoge30pXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldDp1dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbXhwWWk5a2NtOXdjR0ZpYkdVdWFuTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqdEJRVUZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVNJc0ltWnBiR1VpT2lKblpXNWxjbUYwWldRdWFuTWlMQ0p6YjNWeVkyVlNiMjkwSWpvaUlpd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lkbUZ5SUdGdVozVnNZWElnUFNBb2RIbHdaVzltSUhkcGJtUnZkeUFoUFQwZ1hDSjFibVJsWm1sdVpXUmNJaUEvSUhkcGJtUnZkMXNuWVc1bmRXeGhjaWRkSURvZ2RIbHdaVzltSUdkc2IySmhiQ0FoUFQwZ1hDSjFibVJsWm1sdVpXUmNJaUEvSUdkc2IySmhiRnNuWVc1bmRXeGhjaWRkSURvZ2JuVnNiQ2s3WEhKY2JseHlYRzUyWVhJZ1pISmhaMmRsWkNBOUlHRnVaM1ZzWVhJdWJXOWtkV3hsS0NkMWFTNWtjbUZuWjJWa0p5azdYSEpjYmx4eVhHNWtjbUZuWjJWa0xtUnBjbVZqZEdsMlpTZ25kV2xFY205d2NHRmliR1VuTENCMWFVUnliM0J3WVdKc1pTazdYSEpjYmx4eVhHNW1kVzVqZEdsdmJpQjFhVVJ5YjNCd1lXSnNaU2dwSUh0Y2NseHVYSFJ5WlhSMWNtNGdlMXh5WEc1Y2RGeDBjMk52Y0dVNklIdGNjbHh1WEhSY2RGeDBkV2xFY205d2NHRmliR1U2SUZ3aVBWd2lMQ0JjY2x4dVhIUmNkRngwYjI1RWNtOXdPaUJjSWlaY0lpeGNjbHh1WEhSY2RGeDBkV2xFY205d1FXTjBhWFpsUTJ4aGMzTTZYQ0pBWENJc1hISmNibHgwWEhSY2RIVnBSSEp2Y0VGalkyVndkSE02WENKQVhDSmNjbHh1WEhKY2JseDBYSFI5TEZ4eVhHNWNkQ0FnSUNCamIyNTBjbTlzYkdWeVFYTTZJQ2QyYlNjc1hISmNibHgwSUNBZ0lHSnBibVJVYjBOdmJuUnliMnhzWlhJNklIUnlkV1VzWEhKY2JseDBYSFJqYjI1MGNtOXNiR1Z5T2lCMWFVUnliM0J3WVdKc1pVTnZiblJ5YjJ4c1pYSmNjbHh1WEhSOVhISmNibjFjY2x4dVhISmNibVoxYm1OMGFXOXVJSFZwUkhKdmNIQmhZbXhsUTI5dWRISnZiR3hsY2lna2MyTnZjR1VzSUNSbGJHVnRaVzUwS1NCN1hISmNibHgwZG1GeUlIWnRJRDBnZEdocGN6dGNjbHh1WEhSMllYSWdaSEp2Y0VGamRHbDJaVU5zWVhOeklEMGdkR2hwY3k1MWFVUnliM0JCWTNScGRtVkRiR0Z6Y3lCOGZDQW5aSEp2Y0VGamRHbDJaU2M3WEhKY2JseDBkbUZ5SUdGalkyVndkSE1nUFNCMGFHbHpMblZwUkhKdmNFRmpZMlZ3ZEhNZ2ZId2dKM1JsZUhRdmNHeGhhVzRuTzF4eVhHNWNjbHh1WEhKY2JseDBKSE5qYjNCbExpUjNZWFJqYUNnbmRtMHVkV2xFY21GbloyRmliR1VuTENCbWRXNWpkR2x2YmlodVpYZFdZV3dwSUh0Y2NseHVYSEpjYmx4MFhIUjJZWElnWld4bGJXVnVkRlJ2UkhKdmNDQTlJQ1JsYkdWdFpXNTBPMXh5WEc1Y2NseHVYSFJjZEdsbUtHNWxkMVpoYkNBOVBUMGdkVzVrWldacGJtVmtJSHg4SUc1bGQxWmhiQ2tnZTF4eVhHNWNkRngwWEhSbGJHVnRaVzUwVkc5RWNtOXdMbUpwYm1Rb0oyUnlZV2R2ZG1WeUp5d2daSEpoWjA5MlpYSklZVzVrYkdWeUtUdGNjbHh1WEhSY2RGeDBaV3hsYldWdWRGUnZSSEp2Y0M1aWFXNWtLQ2RrY21GblpXNTBaWEluTENCa2NtRm5SVzUwWlhKSVlXNWtiR1Z5S1R0Y2NseHVYSFJjZEZ4MFpXeGxiV1Z1ZEZSdlJISnZjQzVpYVc1a0tDZGtjbUZuYkdWaGRtVW5MQ0JrY21GblRHVmhkbVZJWVc1a2JHVnlLVHRjY2x4dVhIUmNkRngwWld4bGJXVnVkRlJ2UkhKdmNDNWlhVzVrS0Nka2NtOXdKeXdnWkhKdmNFaGhibVJzWlhJcE8xeHlYRzVjY2x4dVhIUmNkSDBnWld4elpTQjdYSEpjYmx4MFhIUmNkR1ZzWlcxbGJuUlViMFJ5YjNBdWRXNWlhVzVrS0Nka2NtRm5iM1psY2ljcE8xeHlYRzVjZEZ4MFhIUmxiR1Z0Wlc1MFZHOUVjbTl3TG5WdVltbHVaQ2duWkhKdmNDY3BPMXh5WEc1Y2RGeDBYSFJsYkdWdFpXNTBWRzlFY205d0xuVnVZbWx1WkNnblpISmhaMlZ1ZEdWeUp5azdYSEpjYmx4MFhIUmNkR1ZzWlcxbGJuUlViMFJ5YjNBdWRXNWlhVzVrS0Nka2NtRm5iR1ZoZG1VbktUdGNjbHh1WEhSY2RIMWNjbHh1WEhSOUtUdGNjbHh1WEhKY2JseHlYRzVjZEdaMWJtTjBhVzl1SUdSeVlXZFBkbVZ5U0dGdVpHeGxjaWhsZG1WdWRDa2dlMXh5WEc1Y2RGeDBaWFpsYm5RZ1BTQmxkbVZ1ZEM1dmNtbG5hVzVoYkVWMlpXNTBJSHg4SUdWMlpXNTBPMXh5WEc1Y2NseHVYSFJjZEdsbUtGOXBjMEZqWTJWd2RHVmtLR1YyWlc1MExtUmhkR0ZVY21GdWMyWmxjaTUwZVhCbGN5a3BJSHRjY2x4dVhIUmNkRngwYVdZZ0tHVjJaVzUwTG5CeVpYWmxiblJFWldaaGRXeDBLU0I3WEhKY2JseDBYSFFnSUNBZ0lDQWdJR1YyWlc1MExuQnlaWFpsYm5SRVpXWmhkV3gwS0NrN0lGeHlYRzVjZEZ4MElDQWdJSDFjY2x4dVhISmNibHgwWEhRZ0lDQWdhV1lnS0dWMlpXNTBMbk4wYjNCUWNtOXdZV2RoZEdsdmJpa2dlMXh5WEc1Y2RGeDBJQ0FnSUNBZ0lDQmxkbVZ1ZEM1emRHOXdVSEp2Y0dGbllYUnBiMjRvS1R0Y2NseHVYSFJjZENBZ0lDQjlYSEpjYmx4MFhIUjlYSEpjYmx4MGZWeHlYRzVjY2x4dVhIUm1kVzVqZEdsdmJpQmtjbTl3U0dGdVpHeGxjaWhsZG1WdWRDa2dlMXh5WEc1Y2RGeDBaWFpsYm5RZ1BTQmxkbVZ1ZEM1dmNtbG5hVzVoYkVWMlpXNTBJSHg4SUdWMlpXNTBPMXh5WEc1Y2NseHVYSFJjZEhaaGNpQmtZWFJoVkhKaGJuTm1aWElnUFNCbGRtVnVkQzVrWVhSaFZISmhibk5tWlhJN1hISmNibHgwWEhSMllYSWdkSGx3WlhNZ1BTQmtZWFJoVkhKaGJuTm1aWEl1ZEhsd1pYTTdYSEpjYmx4MFhIUjJZWElnWVd4c1JHRjBZU0E5SUh0OU8xeHlYRzVjZEZ4MFptOXlLSFpoY2lCcFBUQTdhVHgwZVhCbGN5NXNaVzVuZEdnN0lHa3JLeWtnZTF4eVhHNWNkRngwWEhSaGJHeEVZWFJoVzNSNWNHVnpXMmxkWFNBOUlHUmhkR0ZVY21GdWMyWmxjaTVuWlhSRVlYUmhLSFI1Y0dWelcybGRLVHRjY2x4dVhIUmNkSDFjY2x4dVhIUmNkSFp0TG05dVJISnZjQ2g3WkdGMFlUcGhiR3hFWVhSaFcyRmpZMlZ3ZEhOZExDQmhiR3hFWVhSaE9tRnNiRVJoZEdFc0lHVjJaVzUwT21WMlpXNTBmU2s3WEhKY2JseDBYSFJrY21GblRHVmhkbVZJWVc1a2JHVnlLR1YyWlc1MEtUdGNjbHh1WEhKY2JseDBYSFJwWmlobGRtVnVkQzV6ZEc5d1VISnZjR0ZuWVhScGIyNHBJSHRjY2x4dVhIUmNkRngwWlhabGJuUXVjM1J2Y0ZCeWIzQmhaMkYwYVc5dUtDazdYSEpjYmx4MFhIUjlYSEpjYmx4MFhIUnBaaUFvWlhabGJuUXVjSEpsZG1WdWRFUmxabUYxYkhRcElIdGNjbHh1WEhRZ0lDQWdJQ0FnSUdWMlpXNTBMbkJ5WlhabGJuUkVaV1poZFd4MEtDazdJRnh5WEc1Y2RDQWdJQ0I5WEhKY2JseDBmVnh5WEc1Y2NseHVYSFJtZFc1amRHbHZiaUJrY21GblJXNTBaWEpJWVc1a2JHVnlLR1YyWlc1MEtTQjdYSEpjYmx4MFhIUmxkbVZ1ZENBOUlHVjJaVzUwTG05eWFXZHBibUZzUlhabGJuUWdmSHdnWlhabGJuUTdYSEpjYmx4MFhIUnBaaWhmYVhOQlkyTmxjSFJsWkNobGRtVnVkQzVrWVhSaFZISmhibk5tWlhJdWRIbHdaWE1wS1NCN1hISmNibHgwWEhSY2RDUmxiR1Z0Wlc1MExtRmtaRU5zWVhOektHUnliM0JCWTNScGRtVkRiR0Z6Y3lsY2NseHVYSFJjZEgxY2NseHVYSFI5WEhKY2JseHlYRzVjZEdaMWJtTjBhVzl1SUdSeVlXZE1aV0YyWlVoaGJtUnNaWElvWlhabGJuUXBJSHRjY2x4dVhIUmNkQ1JsYkdWdFpXNTBMbkpsYlc5MlpVTnNZWE56S0dSeWIzQkJZM1JwZG1WRGJHRnpjeWxjY2x4dVhIUjlYSEpjYmx4eVhHNWNkR1oxYm1OMGFXOXVJRjlwYzBGalkyVndkR1ZrS0hSNWNHVnpLU0I3WEhKY2JseDBYSFJtYjNJb0lIWmhjaUJwUFRBN2FUd2dkSGx3WlhNdWJHVnVaM1JvT3lCcEt5c3BJSHRjY2x4dVhIUmNkRngwYVdZb2RIbHdaWE5iYVYwZ1BUMDlJR0ZqWTJWd2RITWdLU0I3WEhKY2JseDBYSFJjZEZ4MGNtVjBkWEp1SUhSeWRXVTdYSEpjYmx4MFhIUmNkSDFjY2x4dVhIUmNkSDFjY2x4dVhIUmNkSEpsZEhWeWJpQm1ZV3h6WlR0Y2NseHVYSFI5WEhKY2JseHlYRzU5WEhKY2JpSmRmUT09IiwidmFyIGRyYWdnZWQgPSBhbmd1bGFyLm1vZHVsZSgndWkuZHJhZ2dlZCcsIFtdKTtcclxuXHJcbnJlcXVpcmUoJy4vZHJhZ2dhYmxlJyk7XHJcbnJlcXVpcmUoJy4vZHJvcHBhYmxlJyk7IiwicmVxdWlyZSgnLi4nKTsiXX0=
